// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/emccode/libstorage/api/types (interfaces: Client)

package mocks

import (
	types "github.com/emccode/libstorage/api/types"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *_MockClientRecorder
}

// Recorder for MockClient (not exported)
type _MockClientRecorder struct {
	mock *MockClient
}

func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &_MockClientRecorder{mock}
	return mock
}

func (_m *MockClient) EXPECT() *_MockClientRecorder {
	return _m.recorder
}

func (_m *MockClient) API() types.APIClient {
	ret := _m.ctrl.Call(_m, "API")
	ret0, _ := ret[0].(types.APIClient)
	return ret0
}

func (_mr *_MockClientRecorder) API() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "API")
}

func (_m *MockClient) Executor() types.StorageExecutorCLI {
	ret := _m.ctrl.Call(_m, "Executor")
	ret0, _ := ret[0].(types.StorageExecutorCLI)
	return ret0
}

func (_mr *_MockClientRecorder) Executor() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Executor")
}

func (_m *MockClient) Integration() types.IntegrationDriver {
	ret := _m.ctrl.Call(_m, "Integration")
	ret0, _ := ret[0].(types.IntegrationDriver)
	return ret0
}

func (_mr *_MockClientRecorder) Integration() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Integration")
}

func (_m *MockClient) OS() types.OSDriver {
	ret := _m.ctrl.Call(_m, "OS")
	ret0, _ := ret[0].(types.OSDriver)
	return ret0
}

func (_mr *_MockClientRecorder) OS() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OS")
}

func (_m *MockClient) Storage() types.StorageDriver {
	ret := _m.ctrl.Call(_m, "Storage")
	ret0, _ := ret[0].(types.StorageDriver)
	return ret0
}

func (_mr *_MockClientRecorder) Storage() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Storage")
}
