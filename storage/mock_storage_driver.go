// Automatically generated by MockGen. DO NOT EDIT!
// Source: fake_scaleio_driver.go

package storage

import (
	"github.com/golang/mock/gomock"
)

// Mock of StorageDriver interface
type MockStorageDriver struct {
	ctrl     *gomock.Controller
	recorder *_MockStorageDriverRecorder
}

// Recorder for MockStorageDriver (not exported)
type _MockStorageDriverRecorder struct {
	mock *MockStorageDriver
}

func NewMockStorageDriver(ctrl *gomock.Controller) *MockStorageDriver {
	mock := &MockStorageDriver{ctrl: ctrl}
	mock.recorder = &_MockStorageDriverRecorder{mock}
	return mock
}

func (_m *MockStorageDriver) EXPECT() *_MockStorageDriverRecorder {
	return _m.recorder
}

func (_m *MockStorageDriver) VolumeCreate(ctx Context, name string, opts *VolumeCreateOpts) (*Volume, error) {
	ret := _m.ctrl.Call(_m, "VolumeCreate", ctx, name, opts)
	ret0, _ := ret[0].(*Volume)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockStorageDriverRecorder) VolumeCreate(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "VolumeCreate", arg0, arg1, arg2)
}

func (_m *MockStorageDriver) VolumeRemove(ctx Context, name string, opts *VolumeCreateOpts) error {
	ret := _m.ctrl.Call(_m, "VolumeRemove", ctx, name, opts)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStorageDriverRecorder) VolumeRemove(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "VolumeRemove", arg0, arg1, arg2)
}
